/**
 * generated by Xtext 2.28.0
 */
package goldsl.tasksDSL.impl;

import goldsl.tasksDSL.Cell;
import goldsl.tasksDSL.Direction;
import goldsl.tasksDSL.TasksDSLPackage;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Cell</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link goldsl.tasksDSL.impl.CellImpl#getX <em>X</em>}</li>
 *   <li>{@link goldsl.tasksDSL.impl.CellImpl#getY <em>Y</em>}</li>
 *   <li>{@link goldsl.tasksDSL.impl.CellImpl#getNo <em>No</em>}</li>
 *   <li>{@link goldsl.tasksDSL.impl.CellImpl#getDir <em>Dir</em>}</li>
 * </ul>
 *
 * @generated
 */
public class CellImpl extends MinimalEObjectImpl.Container implements Cell
{
  /**
   * The default value of the '{@link #getX() <em>X</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getX()
   * @generated
   * @ordered
   */
  protected static final int X_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getX() <em>X</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getX()
   * @generated
   * @ordered
   */
  protected int x = X_EDEFAULT;

  /**
   * The default value of the '{@link #getY() <em>Y</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getY()
   * @generated
   * @ordered
   */
  protected static final int Y_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getY() <em>Y</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getY()
   * @generated
   * @ordered
   */
  protected int y = Y_EDEFAULT;

  /**
   * The default value of the '{@link #getNo() <em>No</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getNo()
   * @generated
   * @ordered
   */
  protected static final int NO_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getNo() <em>No</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getNo()
   * @generated
   * @ordered
   */
  protected int no = NO_EDEFAULT;

  /**
   * The default value of the '{@link #getDir() <em>Dir</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDir()
   * @generated
   * @ordered
   */
  protected static final Direction DIR_EDEFAULT = Direction.NORTH;

  /**
   * The cached value of the '{@link #getDir() <em>Dir</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDir()
   * @generated
   * @ordered
   */
  protected Direction dir = DIR_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected CellImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return TasksDSLPackage.Literals.CELL;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getX()
  {
    return x;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setX(int newX)
  {
    int oldX = x;
    x = newX;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, TasksDSLPackage.CELL__X, oldX, x));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getY()
  {
    return y;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setY(int newY)
  {
    int oldY = y;
    y = newY;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, TasksDSLPackage.CELL__Y, oldY, y));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getNo()
  {
    return no;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setNo(int newNo)
  {
    int oldNo = no;
    no = newNo;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, TasksDSLPackage.CELL__NO, oldNo, no));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Direction getDir()
  {
    return dir;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setDir(Direction newDir)
  {
    Direction oldDir = dir;
    dir = newDir == null ? DIR_EDEFAULT : newDir;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, TasksDSLPackage.CELL__DIR, oldDir, dir));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case TasksDSLPackage.CELL__X:
        return getX();
      case TasksDSLPackage.CELL__Y:
        return getY();
      case TasksDSLPackage.CELL__NO:
        return getNo();
      case TasksDSLPackage.CELL__DIR:
        return getDir();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case TasksDSLPackage.CELL__X:
        setX((Integer)newValue);
        return;
      case TasksDSLPackage.CELL__Y:
        setY((Integer)newValue);
        return;
      case TasksDSLPackage.CELL__NO:
        setNo((Integer)newValue);
        return;
      case TasksDSLPackage.CELL__DIR:
        setDir((Direction)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case TasksDSLPackage.CELL__X:
        setX(X_EDEFAULT);
        return;
      case TasksDSLPackage.CELL__Y:
        setY(Y_EDEFAULT);
        return;
      case TasksDSLPackage.CELL__NO:
        setNo(NO_EDEFAULT);
        return;
      case TasksDSLPackage.CELL__DIR:
        setDir(DIR_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case TasksDSLPackage.CELL__X:
        return x != X_EDEFAULT;
      case TasksDSLPackage.CELL__Y:
        return y != Y_EDEFAULT;
      case TasksDSLPackage.CELL__NO:
        return no != NO_EDEFAULT;
      case TasksDSLPackage.CELL__DIR:
        return dir != DIR_EDEFAULT;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (x: ");
    result.append(x);
    result.append(", y: ");
    result.append(y);
    result.append(", no: ");
    result.append(no);
    result.append(", dir: ");
    result.append(dir);
    result.append(')');
    return result.toString();
  }

} //CellImpl
